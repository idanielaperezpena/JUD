
@model Negocio.ViewModels.Catalogos.CatalogosMostrarModalViewModel
 
<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
        <span aria-hidden="true">×</span>
    </button>
    <h4 class="modal-title">@Model.Label</h4>
</div>
<div class="modal-body">
    @using (Html.BeginForm("Edit", "Catalogos", new { m = Encriptador.Encode(Modulo) }, FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        if (Model.ID.HasValue)
        {
            <div class="form-group">
                @Html.LabelFor(m => m.ID)
                @Html.EditorFor(m => m.ID, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
            </div>
        }
        
        <div class="form-group">
            @Html.LabelFor(m => m.Clave)
            @Html.EditorFor(m => m.Clave, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.ClaveCGMA)
            @Html.EditorFor(m => m.ClaveCGMA, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Descripcion)
            @Html.EditorFor(m => m.Descripcion, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Activo)
            @Html.CustomDropDownListFor(m => m.Activo, Model.Estatus, new { @class = "form-control form-control-sm" }, true)
        </div>
    }
</div>
<div class="modal-footer">
    <button type="button" class="btn btn-default pull-left" data-dismiss="modal">Cerrar</button>
    <button type="button" class="btn btn-primary">@Model.Label</button>
</div>